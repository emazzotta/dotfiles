#!/bin/bash

set -e

output_filename="merged"
output_format="wav"

show_help() {
    echo "Merge multiple audio files into a single audio file and convert it to the specified format."
    echo
    echo "Usage: $(basename $0) [-o <output_filename>] [-f <format>] <audio files...>"
    echo
    echo "Options:"
    echo "  -o, --output FILENAME    Specify the output file name (default is 'merged.wav')."
    echo "  -f, --format FORMAT      Specify the audio format (e.g., mp3, ogg) after merging."
    echo
    echo "<audio files...>    Space-separated list of audio files to merge."
}

while [[ $# -gt 0 ]]; do
    case "$1" in
        -o|--output)
            output_filename="$2"
            output_filename="${output_filename%.*}"
            shift
            shift
            ;;
        -f|--format)
            output_format="$2"
            shift
            shift
            ;;
        -h|--help)
            show_help
            exit 0
            ;;
        *)
            break
            ;;
    esac
done

if [ $# -eq 0 ]; then
    echo "Error: No audio files specified."
    show_help
    exit 1
fi

TEMP_FILE="$(mktemp)"
TEMP_DIR="$(mktemp -d)"

for file in "$@"; do
    if [ ! -f "$file" ]; then
        echo "Error: File '$file' not found."
        rm -f "$TEMP_FILE"
        rm -rf "$TEMP_DIR"
        exit 1
    fi
    standardized_file="${TEMP_DIR}/standardized_$(basename "$file").wav"
    ffmpeg -y -i "$file" -ar 44100 -ac 2 -acodec pcm_s16le "$standardized_file"
    echo "file '$standardized_file'" >> "$TEMP_FILE"
done

full_filename_temp="${output_filename}.wav"
ffmpeg -y -f concat -safe 0 -i "$TEMP_FILE" -c copy "$full_filename_temp"
echo
echo "Audio files have been merged into '$full_filename_temp'."

rm -f "$TEMP_FILE"
rm -rf "$TEMP_DIR"

if [ "$output_format" != "wav" ]; then
    audiotox -f "$output_format" -i "$full_filename_temp"
    rm "$full_filename_temp"
fi
