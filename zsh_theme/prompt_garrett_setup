#!/usr/bin/env zsh

# Garrett Zsh Theme for Prezto
# Created with modified code by Chauncey Garrett - @chauncey_io

# Functions called before each prompt is displayed.
function prompt_garrett_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  prompt_garrett_number_jobs="%(1j.${prompt_garrett_color_prompt}J:${cyan}%j .)"
  prompt_garrett_pwd="${prompt_garrett_color_pwd}$(prompt-pwd)"
  if (( $+functions[git-info] )); then
    git-info
  fi

  prompt_garrett_preprompt_render
}

function prompt_garrett_preprompt_render() {
  print -P '\n${prompt_garrett_altchar_enable}${prompt_garrett_color_prompt}[${prompt_garrett_pwd}${prompt_garrett_color_prompt}] ${git_info[remote_status]}${git_info[prompt_info]}${git_info[local_status]}${git_info[sha]} ${prompt_garrett_color_prompt}'
}

# Configure the prompt.
function prompt_garrett_setup {

  # Load necessary modules.
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent sp subst)

  # Add hooks for calling precmd 
  autoload -Uz add-zsh-hook
  add-zsh-hook precmd prompt_garrett_precmd

  # Alias the colors.
  [[ -z $(functions colors) ]] && autoload -U colors && colors
  for color in red green yellow blue magenta cyan white grey; do

    # Normal colors.
    eval $color='%F{${(L)color}}'

    # Bold colors.
    eval ${color}_bold='%B{${(L)color}}'
  done

  # Color scheme.
  eval prompt_garrett_color_pwd=\$\{${2:-'${green}'}\}
  # eval prompt_garrett_color_pwd=${2:-'${blue}'}
  # eval prompt_garrett_color_line_number=${5:-'${magenta}'}
  # eval prompt_garrett_color_time=${6:-'${green}'}
  # eval prompt_garrett_color_git_branch=${7:-'${green}'}
  # eval prompt_garrett_color_git_sha=${8:-'${yellow}'}
  # eval prompt_garrett_color_ruby_version=${8:-'${yellow}'}

  # Override the default clear-screen so that ^L displays the prompt in its
  # entirety.
  if [[ $widgets[clear-screen] == 'builtin' ]]; then
    zle -N clear-screen prompt_garrett_clear_screen
  fi

  eval prompt_garrett_color_prompt=${1:-'${grey}'}
  eval prompt_garrett_return_code='%(?..${red}%? ⏎  ) '
  eval prompt_garrett_current_time='${green}%*'    # 24 hour time format, second precise
  eval prompt_garrett_line_number='${green}+${magenta}%!'

  zstyle ':prezto:module:git:info' verbose 'yes'

  # Git prompt info.
  zstyle ':prezto:module:git:info:branch'    format "${cyan} λ${prompt_garrett_color_prompt}:${green}%b"
  zstyle ':prezto:module:git:info:remote'    format ""
  zstyle ':prezto:module:git:info:action'    format "${yellow} %s"
  zstyle ':prezto:module:git:info:position'  format "${red} %p"

  # Git commit SHA.
  zstyle ':prezto:module:git:info:commit'    format "${yellow} %.7c"

  # Git remote status.
  zstyle ':prezto:module:git:info:behind'    format "${yellow} ⬇ "
  zstyle ':prezto:module:git:info:ahead'     format "${yellow} ⬆ "
  zstyle ':prezto:module:git:info:diverged'  format "${magenta} ⥮"
  zstyle ':prezto:module:git:info:stashed'   format "${cyan} ✭"

  # Git local status.
  zstyle ':prezto:module:git:info:clean'     format "${green} ✔"
  zstyle ':prezto:module:git:info:dirty'     format "${red} ✗"

  # Git prompt styles.
  zstyle ':prezto:module:git:info:keys' format \
    'prompt_info'    "%b" \
    'rprompt'        "%R" \
    'local_status'   "%C%D%a%d%m%r%U%u" \
    'remote_status'  "%B%A%S" \
    'sha'            "%c" \

  zstyle ':prezto:module:ruby:info:version' format "${yellow}ruby:%v "

  #
  # Command line editor info.
  #

  # Base style.
  zstyle ':prezto:module:editor:info:keymap:primary' format "${red}❱%(?.${prompt_garrett_color_prompt}.${red})❱❱ "

  # Vim insert mode.
  zstyle ':prezto:module:editor:info:keymap:primary:insert' format "${red}I "

  # Vim overwrite mode.
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format "${red}♺ "

  # Vim normal (command) mode.
  zstyle ':prezto:module:editor:info:keymap:alternate' format "${red}❰%(?.${prompt_garrett_color_prompt}.${red})❰❰ "

  # Tab completion mode.
  zstyle ':prezto:module:editor:info:completing' format "${red}..."

  #
  # Use the extended character set, if available.
  #

  typeset -A altchar
  set -A altchar ${(s..)terminfo[acsc]}

  prompt_garrett_altchar_enable="%{$terminfo[enacs]%}"
  prompt_garrett_altchar_enter="%{$terminfo[smacs]%}"
  prompt_garrett_altchar_leave="%{$terminfo[rmacs]%}"

  # Character used to draw line.
  # prompt_garrett_altchar_padding=${altchar[q]:--}

  #
  # Print out the prompt.
  #
  export PROMPT='${prompt_garrett_altchar_enable}${prompt_garrett_color_prompt}❱ ${editor_info[keymap]}'

  # Right prompt.
  export RPROMPT='${editor_info[alternate]}${editor_info[overwrite]}${prompt_garrett_return_code}${prompt_garrett_number_jobs} ${prompt_garrett_current_time} %(?.${prompt_garrett_color_prompt}.${red})❰${prompt_garrett_color_prompt}'

  # Continuation prompt.
  export PROMPT2='(%_) ${editor_info[keymap]}'

  # Selection prompt.
  export PROMPT3='
(?) ${editor_info[keymap]}'

  # Execution trace prompt.
  export PROMPT4='${yellow}+${blue}%N ${green}@${magenta}%i ${reset_color}'

  # Autocorrection prompt.
  export SPROMPT='
${prompt_garrett_color_prompt}Correct ${red}%R${prompt_garrett_color_prompt} to ${green}%r${prompt_garrett_color_prompt} ? [nyae] '
}

prompt_garrett_setup "$@"
