#!/usr/bin/env zsh
#
# Garrett Zsh Theme for Prezto
# Created with modified code by Chauncey Garrett - @chauncey_io
# http://chauncey.io/projects/zsh-prompt-garrett/
#
# This prompt has the following features:
#   - Change prompt color when UID is root
#   - Change host color when on ssh
#   - Display full or truncated hostname on ssh
#   - Determine the number of background jobs
#   - Report the truncated present working directory
#   - Report return codes other than 0
#   - Report local time
#   - Report the terminal line number
#   - Report git status, git remote status, git prompt info and git SHA information
#   - Indicate vi-mode
#   - Notifications for commands taking longer than n time

pmodload 'helper'

# Handle clearing the screen with ^L.
function prompt_garrett_clear_screen() {

  # Enable output to terminal.
  zle -I

  clear
  prompt_garrett_preprompt_render
}

# A function executed whenever the directory is changed.
function prompt_garrett_chpwd {

  # List the contents of the new directory.
  if is-callable 'dircolors'; then

    # GNU flavor ls.
    if zstyle -t ':prezto:module:utility:ls' color; then
      ls --group-directories-first --color=auto
    else
      ls -F
    fi
  else

    # BSD flavor ls.
    if zstyle -t ':prezto:module:utility:ls' color; then
      ls -G
    else
      ls -F
    fi
  fi
}

# Functions called before command execution.
function prompt_garrett_preexec {

  # Define timer and command for notification.
  export prompt_garrett_preexec_time=$(date +'%s')
  export prompt_garrett_preexec_cmd="\$ $1"

  # Ensure terminal code isn't colored from prompt.
  print -n "$reset_color"
}

# Functions called before each prompt is displayed.
function prompt_garrett_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  # Show number of background jobs.
  prompt_garrett_number_jobs="%(1j.${prompt_garrett_color_prompt}J:${cyan}%j .)"

  # Format PWD.
  prompt_garrett_pwd="${prompt_garrett_color_pwd}$(prompt-pwd)"

  # Get Ruby info.
  if (( $+functions[ruby-info] )); then
    ruby-info
  fi

  # Get Git repository info.
  if (( $+functions[git-info] )); then
    git-info
  fi

  prompt_garrett_preprompt_render
}

# Add a line to prompt for visibility.
function prompt_garrett_preprompt_render() {

  # Determine the width.
  local prompt_garrett_width_terminal
  (( prompt_garrett_width_terminal= ${COLUMNS} - 1 ))

  # Determine the length needed for prompt_garrett_space.
  # NOTE: Be sure not to include the ${(e)prompt_garrett_space} portion or it won't work.
  local prompt_line1="( ${prompt_garrett_pwd}${git_info[remote_status]}${git_info[prompt_info]}${git_info[local_status]}${git_info[sha]} )( ${ruby_info[version]}${prompt_garrett_location} )"
  local zero='%([BSUbfksu]|([FB]|){*})'
  local prompt_garrett_width_line1=${#${(S%%)prompt_line1//$~zero/}}

  # Calculate the padding.
  local prompt_garrett_space_padding
  (( prompt_garrett_space_padding= ${prompt_garrett_width_terminal} - ${prompt_garrett_width_line1} ))

  # Add the correct number of characters.
  local prompt_space_character="${prompt_garrett_altchar_padding}"
  eval prompt_garrett_space="${prompt_garrett_color_prompt}\${(l.${prompt_garrett_space_padding}..${prompt_space_character}.)}"

  # Newline + Prompt line 1 (set above PROMPT, below).
  print -P '\n${prompt_garrett_altchar_enable}${prompt_garrett_color_prompt}( ${prompt_garrett_pwd}${git_info[remote_status]}${git_info[prompt_info]}${git_info[local_status]}${git_info[sha]} ${prompt_garrett_color_prompt})${prompt_garrett_altchar_enter}${(e)prompt_garrett_space}${prompt_garrett_altchar_leave}( ${ruby_info[version]}${prompt_garrett_location}${prompt_garrett_color_prompt} )'
}

# Configure the prompt.
function prompt_garrett_setup {

  # Load necessary modules.
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent sp subst)

  # Add hooks for calling preexec, precmd & chpwd.
  autoload -Uz add-zsh-hook
  add-zsh-hook preexec prompt_garrett_preexec
  add-zsh-hook precmd prompt_garrett_precmd
  # add-zsh-hook chpwd prompt_garrett_chpwd

  #
  # Colors
  #

  # Alias the colors.
  [[ -z $(functions colors) ]] && autoload -U colors && colors
  for color in red green yellow blue magenta cyan white grey; do

    # Normal colors.
    eval $color='%F{${(L)color}}'

    # Bold colors.
    eval ${color}_bold='%B{${(L)color}}'
  done

  # Color scheme.
  eval prompt_garrett_color_pwd=\$\{${2:-'${green}'}\}
  # eval prompt_garrett_color_pwd=${2:-'${blue}'}
  # eval prompt_garrett_color_line_number=${5:-'${magenta}'}
  # eval prompt_garrett_color_time=${6:-'${green}'}
  # eval prompt_garrett_color_git_branch=${7:-'${green}'}
  # eval prompt_garrett_color_git_sha=${8:-'${yellow}'}
  # eval prompt_garrett_color_ruby_version=${8:-'${yellow}'}

  # Override the default clear-screen so that ^L displays the prompt in its
  # entirety.
  if [[ $widgets[clear-screen] == 'builtin' ]]; then
    zle -N clear-screen prompt_garrett_clear_screen
  fi

  #
  # Determine prompt, user and host colors.
  #

  # Root user.
  if [[ "$EUID" = "0" ]] || [[ "$USER" = 'root' ]]; then

    # Set colors.
    eval prompt_garrett_color_user=${3:-'${red}'}
    eval prompt_garrett_color_host=${3:-'${red}'}
    eval prompt_garrett_color_prompt=${3:-'${red}'}

    # Set style.
    eval prompt_garrett_user='%S${prompt_garrett_color_user}%n%s'
    eval prompt_garrett_host='${prompt_garrett_color_host}%m' # hostname up to first . (dot) (use %M for full hostname)
    eval prompt_garrett_location='${prompt_garrett_user}${cyan}@${prompt_garrett_host}' # user@host.name

  # On SSH.
  elif [[ -n "$SSH_CLIENT" || -n "$SSH2_CLIENT" ]]; then

    # Set colors.
    eval prompt_garrett_color_user=${3:-'${green}'}
    eval prompt_garrett_color_host=${3:-'${yellow}'}
    eval prompt_garrett_color_prompt=${3:-'${yellow}'}

    # Set style.
    eval prompt_garrett_user='%S${prompt_garrett_color_user}%n%s'
    eval prompt_garrett_host='${prompt_garrett_color_host}%m' # hostname up to first . (dot) (use %M for full hostname)
    eval prompt_garrett_location='${prompt_garrett_user}${cyan}@${prompt_garrett_host}' # user@host.name

  # Normal user.
  else

    # Set colors.
    eval prompt_garrett_color_user=${1:-'${green}'}
    eval prompt_garrett_color_host=${1:-'${green}'}
    eval prompt_garrett_color_prompt=${1:-'${grey}'}

    # Set style.
    eval prompt_garrett_user=''
    eval prompt_garrett_host='${prompt_garrett_color_host}%m' # hostname up to first . (dot) (use %M for full hostname)
    eval prompt_garrett_location='${prompt_garrett_user}${cyan}@${prompt_garrett_host}' # user@host.name
  fi

  eval prompt_garrett_return_code='%(?..${red}%? ⏎  ) '
  eval prompt_garrett_current_time='${green}%*'    # 24 hour time format, second precise
  eval prompt_garrett_line_number='${green}+${magenta}%!'

  zstyle ':prezto:module:git:info' verbose 'yes'

  # Git prompt info.
  zstyle ':prezto:module:git:info:branch'    format "${cyan} λ${prompt_garrett_color_prompt}:${green}%b"
  zstyle ':prezto:module:git:info:remote'    format ""
  zstyle ':prezto:module:git:info:action'    format "${yellow} %s"
  zstyle ':prezto:module:git:info:position'  format "${red} %p"

  # Git commit SHA.
  zstyle ':prezto:module:git:info:commit'    format "${yellow} %.7c"

  # Git remote status.
  zstyle ':prezto:module:git:info:behind'    format "${yellow} ⬇ "
  zstyle ':prezto:module:git:info:ahead'     format "${yellow} ⬆ "
  zstyle ':prezto:module:git:info:diverged'  format "${magenta} ⥮"
  zstyle ':prezto:module:git:info:stashed'   format "${cyan} ✭"

  # Git local status.
  zstyle ':prezto:module:git:info:clean'     format "${green} ✔"
  zstyle ':prezto:module:git:info:dirty'     format "${red} ✗"

  # Git prompt styles.
  zstyle ':prezto:module:git:info:keys' format \
    'prompt_info'    "%b" \
    'rprompt'        "%R" \
    'local_status'   "%C%D%a%d%m%r%U%u" \
    'remote_status'  "%B%A%S" \
    'sha'            "%c" \

  zstyle ':prezto:module:ruby:info:version' format "${yellow}ruby:%v "

  #
  # Command line editor info.
  #

  # Base style.
  zstyle ':prezto:module:editor:info:keymap:primary' format "${red}❱%(?.${prompt_garrett_color_prompt}.${red})❱❱ "

  # Vim insert mode.
  zstyle ':prezto:module:editor:info:keymap:primary:insert' format "${red}I "

  # Vim overwrite mode.
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format "${red}♺ "

  # Vim normal (command) mode.
  zstyle ':prezto:module:editor:info:keymap:alternate' format "${red}❰%(?.${prompt_garrett_color_prompt}.${red})❰❰ "

  # Tab completion mode.
  zstyle ':prezto:module:editor:info:completing' format "${red}..."

  #
  # Use the extended character set, if available.
  #

  typeset -A altchar
  set -A altchar ${(s..)terminfo[acsc]}

  prompt_garrett_altchar_enable="%{$terminfo[enacs]%}"
  prompt_garrett_altchar_enter="%{$terminfo[smacs]%}"
  prompt_garrett_altchar_leave="%{$terminfo[rmacs]%}"

  # Character used to draw line.
  # prompt_garrett_altchar_padding=${altchar[q]:--}

  #
  # Print out the prompt.
  #
  export PROMPT='${prompt_garrett_altchar_enable}${prompt_garrett_color_prompt}❱ ${editor_info[keymap]}'

  # Right prompt.
  export RPROMPT='${editor_info[alternate]}${editor_info[overwrite]}${prompt_garrett_return_code}${prompt_garrett_number_jobs} ${prompt_garrett_current_time} %(?.${prompt_garrett_color_prompt}.${red})❰${prompt_garrett_color_prompt}'

  # Continuation prompt.
  export PROMPT2='(%_) ${editor_info[keymap]}'

  # Selection prompt.
  export PROMPT3='
(?) ${editor_info[keymap]}'

  # Execution trace prompt.
  export PROMPT4='${yellow}+${blue}%N ${green}@${magenta}%i ${reset_color}'

  # Autocorrection prompt.
  export SPROMPT='
${prompt_garrett_color_prompt}Correct ${red}%R${prompt_garrett_color_prompt} to ${green}%r${prompt_garrett_color_prompt} ? [nyae] '
}

prompt_garrett_setup "$@"
