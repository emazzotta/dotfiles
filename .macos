#!/bin/bash

set -e

source "$GLOBAL_ENV_FILE"

echo "Configuring macOS system settings..."

osascript -e 'tell application "System Preferences" to quit'

sudo -v
while true; do sudo -n true; sleep 60; kill -0 "$" || exit; done 2>/dev/null &

echo "Setting up system configuration..."
sudo crontab -u "${USER}" "${CRONTAB_FILE}"
sudo dscl . -append /Groups/admin GroupMembership "${USER}"
sudo scutil --set HostName Emanuele-Machine
sudo scutil --set LocalHostName Emanuele-Machine
sudo scutil --set ComputerName Emanuele-Machine

echo "Configuring keyboard settings..."
defaults write -g InitialKeyRepeat -int 20
defaults write -g KeyRepeat -int 2
sudo pkill -f "KeyboardInput"

echo "Configuring mouse/touchpad settings..." # (unverified)
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
sudo defaults write com.apple.AppleMultitouchTrackpad Clicking -bool true
sudo defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
sudo pkill -f "/System/Library/PrivateFrameworks/MultitouchSupport.framework"

echo "Configuring dock settings..."
defaults write com.apple.dock tilesize -int 52
defaults write com.apple.dock orientation -string "left"
defaults write com.apple.dock show-recents -bool false
killall Dock

echo "Configuring status bar settings..."
sudo defaults write com.apple.Spotlight "NSStatusItem Visible Item-0" -bool false
defaults write com.apple.controlcenter "NSStatusItem Visible Battery" -bool false
defaults write com.apple.TextInputMenu visible -bool false
defaults write com.apple.controlcenter "NSStatusItem Visible WiFi" -bool false
defaults write com.apple.controlcenter "NSStatusItem Visible NowPlaying" -bool false
defaults write com.apple.controlcenter "NSStatusItem Visible DoNotDisturb" -bool false
killall SystemUIServer
killall ControlCenter

echo "Spotlight settings..."
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 64 "<dict><key>enabled</key><false/></dict>"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 65 "<dict><key>enabled</key><false/></dict>"
/System/Library/PrivateFrameworks/SystemAdministration.framework/Resources/activateSettings -u

echo "Configuring security settings..."
defaults -currentHost write com.apple.screensaver idleTime 600
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0
sudo pmset -a displaysleep 0
sudo pmset -a sleep 3600
sudo defaults write com.apple.loginwindow LoginwindowText "If found please return to Emanuele - Call ${PRIVATE_PHONE_NUMBER}"

echo "Configuring Time Machine..."
sudo defaults write com.apple.TimeMachine RequiresACPower -bool false
sudo defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

echo "Configuring Safari..."
configure_safari() {
    local domain="com.apple.Safari"
    sudo defaults write "$domain" IncludeDevelopMenu -bool true
    sudo defaults write "$domain" InstallExtensionUpdatesAutomatically -bool true
    sudo defaults write "$domain" SendDoNotTrackHTTPHeader -bool true
    sudo defaults write "$domain" WebKitDeveloperExtrasEnabledPreferenceKey -bool true
    sudo defaults write "$domain" com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true
}
configure_safari

echo "Configuring Software Update..."
configure_software_update() {
    local domain="com.apple.SoftwareUpdate"
    sudo defaults write "$domain" AutomaticCheckEnabled -bool true
    sudo defaults write "$domain" AutomaticDownload -int 1
    sudo defaults write "$domain" CriticalUpdateInstall -int 1
    sudo defaults write "$domain" ScheduleFrequency -int 1
    sudo defaults write com.apple.commerce AutoUpdate -bool true
}
configure_software_update

echo "Configuring Finder..."
configure_finder() {
    defaults write NSGlobalDomain AppleShowAllExtensions -bool true
    defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
    defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"
    /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy name" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy name" ~/Library/Preferences/com.apple.finder.plist
    /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy name" ~/Library/Preferences/com.apple.finder.plist
    defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
    defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
    defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
    defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true
    defaults write com.apple.finder ShowPathbar -bool true # Option + Command + P
    killall cfprefsd
    killall Finder
}
configure_finder

echo "Configuring Mail..."
configure_mail() {
    local domain="com.apple.mail"
    defaults write "$domain" AddressesIncludeNameOnPasteboard -bool false
    sudo defaults write "$domain" NSUserKeyEquivalents -dict-add "Send" -string "@\\U21a9"
}
configure_mail

echo "Configuring additional settings..."
sudo defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40
defaults write com.apple.menuextra.battery ShowPercent -string "YES"
defaults write com.apple.screencapture location "${HOME}/Desktop/"
defaults write com.google.android.studio AppleWindowTabbingMode manual

echo "macOS configuration complete! Some changes may require a restart."

